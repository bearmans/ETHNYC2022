/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyContract, MyContractInterface } from "../MyContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Found",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "NotFound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "handshakes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "makeFriends",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "mintNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805180820182526005815264135e53919560da1b60208083019182528351808501909452600384526213919560ea1b9084015281519192916200005a9160009162000079565b5080516200007090600190602084019062000079565b5050506200015c565b82805462000087906200011f565b90600052602060002090601f016020900481019282620000ab5760008555620000f6565b82601f10620000c657805160ff1916838001178555620000f6565b82800160010185558215620000f6579182015b82811115620000f6578251825591602001919060010190620000d9565b506200010492915062000108565b5090565b5b8082111562000104576000815560010162000109565b6002810460018216806200013457607f821691505b602082108114156200015657634e487b7160e01b600052602260045260246000fd5b50919050565b61162e806200016c6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb46514610212578063b88d4fde14610225578063c87b56dd14610238578063e985e9c51461024b57610100565b80636352211e146101d157806370a08231146101e45780637ee7af36146101f757806395d89b411461020a57610100565b806323b872dd116100d357806323b872dd146101785780632422cbb21461018b57806342842e0e1461019e57806354ba0f27146101b157610100565b806301ffc9a71461010557806306fdde031461012e578063081812fc14610143578063095ea7b314610163575b600080fd5b610118610113366004610fa0565b61025e565b60405161012591906110b6565b60405180910390f35b6101366102a6565b60405161012591906110c1565b610156610151366004610fd8565b610338565b604051610125919061104b565b610176610171366004610f77565b610384565b005b610176610186366004610e2d565b61041c565b610118610199366004610dfb565b610454565b6101766101ac366004610e2d565b610474565b6101c46101bf366004610de1565b61048f565b60405161012591906114bb565b6101566101df366004610fd8565b6104a8565b6101c46101f2366004610de1565b6104dd565b610176610205366004610dfb565b610521565b610136610641565b610176610220366004610f3d565b610650565b610176610233366004610e68565b610662565b610136610246366004610fd8565b6106a1565b610118610259366004610dfb565b610724565b60006001600160e01b031982166380ac58cd60e01b148061028f57506001600160e01b03198216635b5e139f60e01b145b8061029e575061029e82610752565b90505b919050565b6060600080546102b590611533565b80601f01602080910402602001604051908101604052809291908181526020018280546102e190611533565b801561032e5780601f106103035761010080835404028352916020019161032e565b820191906000526020600020905b81548152906001019060200180831161031157829003601f168201915b5050505050905090565b60006103438261076b565b6103685760405162461bcd60e51b815260040161035f9061138e565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061038f826104a8565b9050806001600160a01b0316836001600160a01b031614156103c35760405162461bcd60e51b815260040161035f90611429565b806001600160a01b03166103d5610788565b6001600160a01b031614806103f157506103f181610259610788565b61040d5760405162461bcd60e51b815260040161035f90611269565b610417838361078c565b505050565b61042d610427610788565b826107fa565b6104495760405162461bcd60e51b815260040161035f9061146a565b61041783838361087f565b600760209081526000928352604080842090915290825290205460ff1681565b61041783838360405180602001604052806000815250610662565b60008061049c60066109b2565b905061029e83826109b6565b6000818152600260205260408120546001600160a01b03168061029e5760405162461bcd60e51b815260040161035f90611310565b60006001600160a01b0382166105055760405162461bcd60e51b815260040161035f906112c6565b506001600160a01b031660009081526003602052604090205490565b6001600160a01b0380821660009081526007602090815260408083209386168352929052205460ff161515600114156105d3577f5f211d6e3be14842d95c9d0c04f956b9cd0b229aff904b53d81d9c75dc5a9d1c818360405161058592919061105f565b60405180910390a16105968261048f565b506105a08161048f565b506001600160a01b038083166000908152600760209081526040808320938516835292905220805460ff1916905561063d565b7fe0fea35f046262cc581b234d8040cedaac4c966b6b86544d55e6babc916d8d5c818360405161060492919061105f565b60405180910390a16001600160a01b038083166000908152600760209081526040808320938516835292905220805460ff191660011790555b5050565b6060600180546102b590611533565b61063d61065b610788565b8383610a9d565b61067361066d610788565b836107fa565b61068f5760405162461bcd60e51b815260040161035f9061146a565b61069b84848484610b40565b50505050565b60606106ac8261076b565b6106c85760405162461bcd60e51b815260040161035f906113da565b60006106d2610b73565b905060008151116106f2576040518060200160405280600081525061071d565b806106fc84610b85565b60405160200161070d92919061101c565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6001600160e01b031981166301ffc9a760e01b14919050565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906107c1826104a8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006108058261076b565b6108215760405162461bcd60e51b815260040161035f9061121d565b600061082c836104a8565b9050806001600160a01b0316846001600160a01b0316148061085357506108538185610724565b806108775750836001600160a01b031661086c84610338565b6001600160a01b0316145b949350505050565b826001600160a01b0316610892826104a8565b6001600160a01b0316146108b85760405162461bcd60e51b815260040161035f90611126565b6001600160a01b0382166108de5760405162461bcd60e51b815260040161035f906111a2565b6108e9838383610417565b6108f460008261078c565b6001600160a01b038316600090815260036020526040812080546001929061091d9084906114f0565b90915550506001600160a01b038216600090815260036020526040812080546001929061094b9084906114c4565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4610417838383610417565b5490565b6001600160a01b0382166109dc5760405162461bcd60e51b815260040161035f90611359565b6109e58161076b565b15610a025760405162461bcd60e51b815260040161035f9061116b565b610a0e60008383610417565b6001600160a01b0382166000908152600360205260408120805460019290610a379084906114c4565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a461063d60008383610417565b816001600160a01b0316836001600160a01b03161415610acf5760405162461bcd60e51b815260040161035f906111e6565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610b339085906110b6565b60405180910390a3505050565b610b4b84848461087f565b610b5784848484610ca0565b61069b5760405162461bcd60e51b815260040161035f906110d4565b60408051602081019091526000815290565b606081610baa57506040805180820190915260018152600360fc1b60208201526102a1565b8160005b8115610bd45780610bbe8161156e565b9150610bcd9050600a836114dc565b9150610bae565b60008167ffffffffffffffff811115610bfd57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610c27576020820181803683370190505b5090505b841561087757610c3c6001836114f0565b9150610c49600a86611589565b610c549060306114c4565b60f81b818381518110610c7757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610c99600a866114dc565b9450610c2b565b6000610cb4846001600160a01b0316610dbb565b15610db057836001600160a01b031663150b7a02610cd0610788565b8786866040518563ffffffff1660e01b8152600401610cf29493929190611079565b602060405180830381600087803b158015610d0c57600080fd5b505af1925050508015610d3c575060408051601f3d908101601f19168201909252610d3991810190610fbc565b60015b610d96573d808015610d6a576040519150601f19603f3d011682016040523d82523d6000602084013e610d6f565b606091505b508051610d8e5760405162461bcd60e51b815260040161035f906110d4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610877565b506001949350505050565b6001600160a01b03163b151590565b80356001600160a01b03811681146102a157600080fd5b600060208284031215610df2578081fd5b61071d82610dca565b60008060408385031215610e0d578081fd5b610e1683610dca565b9150610e2460208401610dca565b90509250929050565b600080600060608486031215610e41578081fd5b610e4a84610dca565b9250610e5860208501610dca565b9150604084013590509250925092565b60008060008060808587031215610e7d578081fd5b610e8685610dca565b9350610e9460208601610dca565b925060408501359150606085013567ffffffffffffffff80821115610eb7578283fd5b818701915087601f830112610eca578283fd5b813581811115610edc57610edc6115c9565b604051601f8201601f19908116603f01168101908382118183101715610f0457610f046115c9565b816040528281528a6020848701011115610f1c578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215610f4f578182fd5b610f5883610dca565b915060208301358015158114610f6c578182fd5b809150509250929050565b60008060408385031215610f89578182fd5b610f9283610dca565b946020939093013593505050565b600060208284031215610fb1578081fd5b813561071d816115df565b600060208284031215610fcd578081fd5b815161071d816115df565b600060208284031215610fe9578081fd5b5035919050565b60008151808452611008816020860160208601611507565b601f01601f19169290920160200192915050565b6000835161102e818460208801611507565b835190830190611042818360208801611507565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906110ac90830184610ff0565b9695505050505050565b901515815260200190565b60006020825261071d6020830184610ff0565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b90815260200190565b600082198211156114d7576114d761159d565b500190565b6000826114eb576114eb6115b3565b500490565b6000828210156115025761150261159d565b500390565b60005b8381101561152257818101518382015260200161150a565b8381111561069b5750506000910152565b60028104600182168061154757607f821691505b6020821081141561156857634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156115825761158261159d565b5060010190565b600082611598576115986115b3565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146115f557600080fd5b5056fea2646970667358221220387ef00263b9ad9b8e232feb42bc818440dc85c49e13a23a6c473448e7c321d164736f6c63430008010033";

type MyContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyContract__factory extends ContractFactory {
  constructor(...args: MyContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MyContract";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyContract> {
    return super.deploy(overrides || {}) as Promise<MyContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyContract {
    return super.attach(address) as MyContract;
  }
  connect(signer: Signer): MyContract__factory {
    return super.connect(signer) as MyContract__factory;
  }
  static readonly contractName: "MyContract";
  public readonly contractName: "MyContract";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyContractInterface {
    return new utils.Interface(_abi) as MyContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyContract {
    return new Contract(address, _abi, signerOrProvider) as MyContract;
  }
}
